# -*- mode: ruby; coding: utf-8 -*-
# main.conf
#
# This is the main configuration file for Karfunkel, the OpenRubyRMK’s
# server. Do *not* remove the surrounding do..end statements.
# This file is pure Ruby code without unnecessary configuration
# limitations.
#
# Available commands are:
#
# set <OPTION>, <VALUE>
# Sets the specified OPTION to the given VALUE.
#
# enable <OPTION>
# Equivalent to `set <OPTION>, true', i.e. enables OPTION.
#
# disable <OPTION>
# Equivalent to `set <OPTION>, false', i.e. disables OPTION.
#
# define <OPTION> do ... end
# Attaches a block of Ruby code to OPTION. The structure of
# the code between `do' and `end' is option-dependent.
#
# You can refer to already set options by just using the
# option’s name, so you can do nonsense like making the
# PING request interval dependent on the port number
# by something like this:
#   set :port, 1234
#   set :ping_interval, port
#
# Default values for most options are indicated by a double
# hash sign ##.

OpenRubyRMK::Karfunkel.instance.configure do

  ########################################
  # Main configuration options

  # Port Karfunkel listens on.
  ## 3141
  set :port, 3141

  # File to write the process identifier (PID) into.
  # Nonexisting directories in the path will be
  # created. The default creates a tmp/ subdirectory
  # under the project’s root directory and stores
  # the PID file there. If you want to specify an absolute
  # path, just use a string as in:
  #   set :pid_file, "/tmp/karfunkel.pid"
  #
  ## OpenRubyRMK::Karfunkel::Paths::TMP_DIR + "karfunkel.pid"
  set :pid_file, OpenRubyRMK::Karfunkel::Paths::TMP_DIR + "karfunkel.pid"

  ########################################
  # Logging

  # Log level. One of:
  # 0: Show debug messages, informational messages, warnings, and errors.
  # 1: Show informational messages, warnings, and errors.
  # 2: Show warnings and errors.
  # 3: Show errors.
  # 4: Show only fatal errors that cause Karfunkel to crash.
  ## 1
  set :log_level, 0

  # Log format. The code below should be pretty self-explanatory.
  #
  # Parameter explanation:
  # * sev: Severity of the issue as a full word like "FATAL".
  # * time: The time something happened. Ruby Time object.
  # * progname: Name of the program, i.e. "karfunkel".
  # * msg: What actually happened.
  #
  # If you need the PID, you may access it as `$$' (without the
  # quotes).
  define :log_format do |sev, time, progname, msg|
    time.strftime("%d/%m/%Y %H:%M:%S [#{sev.chars.first}] #{msg}\n")
  end

  ########################################
  # Server interna

  # Interval (in seconds) in which Karfunkel sends PING
  # requests to ensure a client is alive. If unsure, leave
  # this unchanged.
  ## 20
  set :ping_interval, 20

  # Number of secconds to wait before Karfunkel rejects
  # a client not greeting. If unsure, leave this unchanged.
  ## 5
  set :greet_timeout, 5

end
